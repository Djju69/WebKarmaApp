<#
.SYNOPSIS
    –°–∫—Ä–∏–ø—Ç –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –Ω–∞–≥—Ä—É–∑–æ—á–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è.
.DESCRIPTION
    –ó–∞–ø—É—Å–∫–∞–µ—Ç —Å–µ—Ä–∏—é –Ω–∞–≥—Ä—É–∑–æ—á–Ω—ã—Ö —Ç–µ—Å—Ç–æ–≤ —Å —Ä–∞–∑–Ω—ã–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏
    –∏ –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –æ—Ç—á–µ—Ç—ã –æ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏.
#>

param (
    [string]$targetHost = "http://localhost:8000",
    [int]$duration = "60",  # –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å —Ç–µ—Å—Ç–∞ –≤ —Å–µ–∫—É–Ω–¥–∞—Ö
    [string]$envFile = "..\..\.env"  # –§–∞–π–ª —Å –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–º–∏ –æ–∫—Ä—É–∂–µ–Ω–∏—è
)

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
if (Test-Path $envFile) {
    Get-Content $envFile | ForEach-Object {
        $name, $value = $_.split('=', 2)
        if ($name -and $value) {
            [Environment]::SetEnvironmentVariable($name.Trim(), $value.Trim(), "Process")
        }
    }
}

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è —Ü–µ–ª–µ–≤–æ–≥–æ —Ö–æ—Å—Ç–∞
[Environment]::SetEnvironmentVariable("TARGET_HOST", $targetHost, "Process")

# –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è –æ—Ç—á–µ—Ç–æ–≤
$reportDir = "reports/$(Get-Date -Format 'yyyyMMdd_HHmmss')"
New-Item -ItemType Directory -Force -Path $reportDir | Out-Null

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ —Ç–µ—Å—Ç–∞
function Run-LoadTest {
    param (
        [string]$testName,
        [int]$users,
        [int]$spawnRate,
        [int]$duration
    )
    
    Write-Host "`nüöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞: $testName" -ForegroundColor Cyan
    Write-Host "üë• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏: $users, –°–∫–æ—Ä–æ—Å—Ç—å: $spawnRate/—Å–µ–∫, –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: ${duration}—Å" -ForegroundColor Cyan
    
    $reportPath = "$reportDir/$testName"
    
    # –ó–∞–ø—É—Å–∫ Locust —Å —É–∫–∞–∑–∞–Ω–Ω—ã–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏
    $process = Start-Process -NoNewWindow -PassThru -FilePath "locust" -ArgumentList @(
        "-f", "locustfile.py",
        "--headless",
        "--users", $users,
        "--spawn-rate", $spawnRate,
        "--run-time", "${duration}s",
        "--csv", $reportPath,
        "--csv-full-history",
        "--host", $targetHost
    )
    
    $process | Wait-Process
    
    # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç—á–µ—Ç–∞
    Write-Host "üìä –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç—á–µ—Ç–∞ –¥–ª—è $testName..." -ForegroundColor Green
    python -c "import pandas as pd; df = pd.read_csv('${reportPath}_stats.csv'); print(df[['Name', '# requests', '50%', '95%', '99%', 'Max', 'Total Median Response Time']].to_markdown())" | Out-File "${reportPath}_summary.md"
    
    Write-Host "‚úÖ –¢–µ—Å—Ç $testName –∑–∞–≤–µ—Ä—à–µ–Ω. –û—Ç—á–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ ${reportPath}_summary.md" -ForegroundColor Green
}

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
Write-Host "üîß –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..." -ForegroundColor Yellow
pip install -r requirements.txt

# –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ —Å —Ä–∞–∑–Ω—ã–º–∏ —Å—Ü–µ–Ω–∞—Ä–∏—è–º–∏
$testScenarios = @(
    @{Name = "smoke"; Users = 10; SpawnRate = 5; Duration = 30},
    @{Name = "normal"; Users = 100; SpawnRate = 10; Duration = 60},
    @{Name = "high"; Users = 500; SpawnRate = 50; Duration = 120},
    @{Name = "spike"; Users = 1000; SpawnRate = 100; Duration = 300}
)

foreach ($test in $testScenarios) {
    Run-LoadTest -testName $test.Name -users $test.Users -spawnRate $test.SpawnRate -duration $test.Duration
}

Write-Host "`nüéâ –í—Å–µ —Ç–µ—Å—Ç—ã –∑–∞–≤–µ—Ä—à–µ–Ω—ã! –û—Ç—á–µ—Ç—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏: $reportDir" -ForegroundColor Green
